<div class="mt-4">
  <h3>Deleted Posts</h3>
  <a href="/me/posts">My Posts</a>
</div>
<form class="mt-4" name="container-form" action="/post/trashed/handle-form-action" method="POST">
  <div class="mt-4 d-flex align-items-center">
    <div class="form-check">
      <input class="form-check-input" type="checkbox" value="" id="checkboxAll">
      <label class="form-check-label" for="checkboxAll">
        Select all
      </label>
    </div>
    <select name="action" id="" class="form-select form-select-sm checkbox-select-all" required>
      <option value="">--Choose action--</option>
      <option value="restore">Restore</option>
      <option value="delete">Delete</option>
    </select>
    <button type="button" class="btn btn-primary btn-sm disabled apply-action-btn">Apply</button>
  </div>
  <table class="table">
    <thead>
        <tr>
        <th scope="col"></th>
        <th scope="col">#</th>
        <th scope="col">Title</th>
        <th scope="col">Deleted</th>
        <th scope="col">Description</th>
        <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        {{#each posts}}
        <tr>
          <td>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" value="{{this._id}}" name="postIds[]">
            </div>
          </td>
          <th scope="row">{{sum @index 1}}</th>
          <td>{{this.title}}</td>
          <td>{{dateFormat this.deletedAt "LLL"}}</td>
          <td>{{this.description}}</td>
          <td>
              <a href="" class="btn btn-link btn-restore" data-id="{{this._id}}">Restore</a>
              <a href="" class="btn btn-link" data-bs-toggle="modal" data-id="{{this._id}}" data-bs-target="#deletePostModal">Delete</a>
          </td>
        </tr>
        {{else}}
        <tr>
          <td colspan="5" class="text-center">
            Babe, you haven't deleted anything yet.
            <a href="/me/posts">See your posts.</a>
          </td>
        </tr>
        {{/each}}
    </tbody>
  </table>
</form>


{{!-- CONFIRM DELETE POST --}}

<div class="modal" tabindex="-1" id="deletePostModal">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Delete post</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>Babe, are you sure you want to delete this post PERMANENTLY? This action CANNOT be undo.</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-danger" id="btn-delete-post">Delete</button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

{{!-- Hidden delete form --}}
<form method="POST" name="delete-post-form"></form>
<form method="POST" name="restore-post-form"></form>

<script>
    let postId;
    const delForm = document.forms['delete-post-form'];
    const delBtn = document.getElementById('btn-delete-post');
    const restoreForm = document.forms['restore-post-form'];
    const restoreBtns = document.querySelectorAll('.btn-restore');
    const allChkbx = document.getElementById('checkboxAll');
    const postsChkbox = document.querySelectorAll('input[name="postIds[]"]')
    const btnApplyAction = document.querySelector('.apply-action-btn')
    const selectAction = document.querySelector('select[name="action"]')
    const formContainer = document.querySelector('form[name="container-form"]')

    const deletePostModal = document.getElementById('deletePostModal');

    // When confirmation modal appears
    deletePostModal.addEventListener('show.bs.modal', event => { 
        const button = event.relatedTarget;
        postId = button.getAttribute('data-id');
    })

    // When delete btn is clicked
    delBtn.onclick = () => {
        delForm.action = `/post/${postId}/force?_method=DELETE`;
        delForm.submit();
    }

    restoreBtns.forEach(restoreBtn => {
      restoreBtn.onclick = (e) => {
        e.preventDefault();
        const postId = restoreBtn.getAttribute('data-id');
        restoreForm.action = `/post/${postId}/restore?_method=PATCH`;
        restoreForm.submit();
      }
    });

    // Select all Changed
    allChkbx.onchange = (e) => {
      let isCheckedAll = allChkbx.checked;
      postsChkbox.forEach(postChkbox => postChkbox.checked = isCheckedAll);
      renderApplyBtn();
    }

    // Post item checkbox changed
    postsChkbox.forEach((postChkbox, index) => {
      postChkbox.onchange = () => {
        let isAllItemChecked = postsChkbox.length === document.querySelectorAll('input[name="postIds[]"]:checked').length;
        allChkbx.checked = isAllItemChecked;
        renderApplyBtn();
      }
    });

    // Apply action btn clicked
    btnApplyAction.onclick = (e) => {
      let isSubmitable = !btnApplyAction.classList.contains('disabled');
      if (isSubmitable) {
        formContainer.submit();
      } else {
        e.preventDefaultbehaviour();
      }
    }

    // RE-render that apply button to execute the action
    function renderApplyBtn() {
      var countCheckedItem = document.querySelectorAll('input[name="postIds[]"]:checked').length;
      if (countCheckedItem > 0 && selectAction.value !== '') {
        btnApplyAction.classList.remove('disabled');
      } else {
        btnApplyAction.classList.add('disabled');
      }
    }

    // Action combox changed
    selectAction.onchange = () => renderApplyBtn();
</script>